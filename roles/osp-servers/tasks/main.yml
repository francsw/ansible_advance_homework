---

# tasks file for osp.servers
- name: Create new server instances and attaches them to a network and passes metadata to the instance
  os_server:
    cloud: ospcloud
    name: "{{ item.value.name }}"
    image: "{{ item.value.image }}"
    meta: "group={{ item.value.meta[0].group }},deployment_name={{ item.value.meta[0].deployment_name }}"
    flavor: "{{ item.value.flavor }}"
    security_groups: "{{ item.value.security_group }}"
    key_name: ansible_ssh
    nics:
    - net-name: int_network
    userdata: |
      #!/bin/bash
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
      curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
      cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
  with_dict: "{{ osp_servers }}"
  register: new_instance
  tags: os_create

- name: Add floating IP to server "{{ item.value.name }}"
  os_floating_ip:
    cloud: ospcloud
    state: present
    reuse: yes
    server: "{{ item.value.name }}"
    network: ext_network
    wait: true
    timeout: 180
  register: instance_floatingip
  with_dict: "{{ osp_servers }}"
  tags: os_floatingip

- name: Make a list of instances
  os_server_info:
    cloud: ospcloud
  register: osp_instances

- name: Wait for servers to become available
  wait_for:
    host: "{{ item.public_v4 }}"
    port: 22
    delay: 30
    timeout: 300
  with_items: "{{ osp_instances.openstack_servers }}"
  tags: os_instanceup
